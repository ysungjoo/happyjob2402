<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.study.pcs.dao.PcsDao">
  <!-- 발주지시서 목록 조회 -->
  <select id="pcsOrderingOrder" resultType="kr.happyjob.study.pcs.model.PcsModel">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
      SELECT 
            DISTINCT
             PL.purch_list_no
         ,   PL.order_cd
         ,   PL.supply_cd
         ,   SP.supply_nm
         ,   PD.prod_nm
         ,   MC.m_ct_nm
         ,   PL.purch_qty
         ,   PD.purchase_price
         ,   PL.desired_delivery_date
         ,   WH.warehouse_nm
         ,   case when PL.purch_mng_id is null
                  then ''
                  else UI.name
             end as purch_mng_id
         ,   PL.scm_id
         ,   PL.purch_date
         ,   OD.STTcd
         ,   DC.detail_name
         ,   case when PL.desired_delivery_date is null
                  then #{loginID}
                  else PL.purch_mng_id
             end as loginID
      FROM tb_scm_purchase_list as PL
          LEFT JOIN tb_order as OD
          ON PL.order_cd = OD.order_cd
          LEFT JOIN tb_scm_product as PD
          ON OD.product_cd = PD.product_cd
          LEFT JOIN tb_scm_supply as SP
          ON PD.supply_cd = SP.supply_cd
          LEFT JOIN tb_scm_m_category MC
          ON MC.m_ct_cd = PD.m_ct_cd
          LEFT JOIN tb_scm_warehouse as WH
          ON SP.warehouse_cd = WH.warehouse_cd
          LEFT JOIN tb_userinfo UI
          ON PL.purch_mng_id = UI.loginID
          LEFT JOIN (
              SELECT detail_code, group_code, detail_name
            FROM tb_detail_code
            WHERE group_code = 'STTcd'
          ) DC ON OD.STTcd = DC.detail_code
          WHERE OD.STTcd = '10'
         <if test="(sname != null) and (!sname.equals(''))">
            <choose>
              <when
                test="oname eq 'all'.toString()">
                and MC.m_ct_nm LIKE CONCAT('%', #{sname}, '%') or PD.prod_nm LIKE CONCAT('%', #{sname}, '%')
              </when>
              <when test="oname eq 'brand'.toString()">
                and MC.m_ct_nm LIKE CONCAT('%', #{sname}, '%')
              </when>
              <when test="oname eq 'product'.toString()">
                 and PD.prod_nm LIKE CONCAT('%', #{sname}, '%')
              </when>
            </choose>
          </if>
          <if test="(date != null) and (!date.equals(''))"> 
              and DATE_FORMAT(PL.desired_delivery_date, "%Y-%m-%d") = #{date}
          </if>
      ORDER BY purch_list_no DESC
      LIMIT #{pageIndex}, #{pageSize}
  </select>

  <!-- 발주지시서 목록 총 갯수 조회 -->
  <select id="countPcsOrderingOrder" resultType="int">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
    SELECT COUNT(1) AS tot_cnt 
      FROM tb_scm_purchase_list as PL
          LEFT JOIN tb_order as OD
        ON PL.order_cd = OD.order_cd
        LEFT JOIN tb_scm_warehouse as WH
        ON OD.warehouse_cd = WH.warehouse_cd
        LEFT JOIN tb_scm_product as PD
        ON OD.product_cd = PD.product_cd
        LEFT JOIN tb_scm_m_category MC
        ON MC.m_ct_cd = PD.m_ct_cd
        WHERE OD.STTcd = '10'
       <if test="(sname != null) and (!sname.equals(''))">
          <choose>
            <when
              test="oname eq 'all'.toString()">
              and MC.m_ct_nm LIKE CONCAT('%', #{sname}, '%') or PD.prod_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
            <when test="oname eq 'brand'.toString()">
              and MC.m_ct_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
            <when test="oname eq 'product'.toString()">
               and PD.prod_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
          </choose>
        </if>
        <if test="(date != null) and (!date.equals(''))"> 
            and DATE_FORMAT(PL.desired_delivery_date, "%Y-%m-%d") = #{date}
        </if>
  </select>
  
  <!-- 발주지시서 상태 업데이트 -->
  <update id="updateState" parameterType="int">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
    UPDATE tb_scm_purchase_list as pl, tb_order as od
       SET pl.purch_date = #{purch_date},
           pl.desired_delivery_date = #{desired_delivery_date},
           pl.purch_mng_id = #{purch_mng_id},
           od.STTcd = '11'
     WHERE pl.purch_list_no = #{purch_list_no} AND od.order_cd = #{order_cd}
  </update>
  
  <!-- 발주지시서 버튼 -->
  <select id="selectPurchBtn" resultType="kr.happyjob.study.pcs.model.PcsModel">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
      SELECT 
           DISTINCT
             PL.purch_list_no
         ,   SP.supply_nm
         ,   PD.prod_nm
         ,   PD.m_ct_cd
         ,   MC.m_ct_nm
         ,   PL.purch_qty
         ,   PD.purchase_price
         ,   PL.purch_date
         ,   PL.desired_delivery_date
         ,   WH.warehouse_nm
         ,   PL.purch_mng_id
         ,   PL.supply_cd
         ,   DC.detail_name
      FROM tb_scm_purchase_list as PL
          LEFT JOIN tb_order as OD
        ON PL.order_cd = OD.order_cd
        LEFT JOIN tb_scm_warehouse as WH
        ON OD.warehouse_cd = WH.warehouse_cd  
        LEFT JOIN tb_scm_supply as SP
        ON PL.supply_cd = SP.supply_cd
        LEFT JOIN tb_scm_product as PD
        ON OD.product_cd = PD.product_cd
        LEFT JOIN tb_scm_m_category MC
        ON MC.m_ct_cd = PD.m_ct_cd
        LEFT JOIN (
            SELECT detail_code, group_code, detail_name
          FROM tb_detail_code
          WHERE group_code = 'STTcd'
        ) DC ON OD.STTcd = DC.detail_code
     WHERE PL.purch_list_no = #{purch_list_no}
       AND PL.order_cd = #{order_cd}
       AND PL.supply_cd = #{supply_cd}
       AND PD.product_cd = #{product_cd}
  </select>
  
  <!-- 발주서 목록 조회 -->
  <select id="pcsOrderForm" resultType="kr.happyjob.study.pcs.model.PcsModel">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
        SELECT pl.purch_list_no
      ,pl.order_cd
      ,sp.supply_nm
      ,pd.prod_nm
      ,mc.m_ct_nm
      ,pd.m_ct_cd
      ,pl.purch_qty
      ,wh.warehouse_nm
      ,DATE_FORMAT(pl.purch_date, "%Y-%m-%d") as purch_date 
      ,DATE_FORMAT(pl.desired_delivery_date, "%Y-%m-%d") as desired_delivery_date 
      ,od.STTcd
      ,pl.supply_cd
      ,dc.detail_name
      ,pd.product_cd
  FROM tb_scm_purchase_list pl
       inner join tb_scm_supply sp on sp.supply_cd = pl.supply_cd
       inner join tb_order od on od.order_cd = pl.order_cd
       inner join tb_scm_product pd on pd.product_cd = od.product_cd
       inner join tb_scm_m_category mc on mc.m_ct_cd = pd.m_ct_cd
       inner join tb_scm_warehouse wh on wh.warehouse_cd = sp.warehouse_cd
       inner join (
                    SELECT detail_code, group_code, detail_name
                      FROM tb_detail_code
                     WHERE group_code = 'STTcd'
        ) dc ON dc.detail_code = od.STTcd 
      WHERE od.STTcd in (11,12)
        <if test="(sname != null) and (!sname.equals(''))">
          <choose>
            <when
              test="oname eq 'all'.toString()">
              and mc.m_ct_nm LIKE CONCAT('%', #{sname}, '%') or pd.prod_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
            <when test="oname eq 'brand'.toString()">
              and mc.m_ct_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
            <when test="oname eq 'product'.toString()">
               and pd.prod_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
          </choose>
        </if>
        <if test="(date != null) and (!date.equals(''))"> 
            and ( DATE_FORMAT(pl.purch_date, "%Y-%m-%d") = #{date}
               or DATE_FORMAT(pl.desired_delivery_date, "%Y-%m-%d") = #{date} )
        </if>
      ORDER BY purch_list_no DESC
      LIMIT #{pageIndex}, #{pageSize}
  </select>
  
  <!-- 발주서 목록 총 갯수 조회 -->
  <select id="countPcsOrderForm" resultType="int">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
    SELECT COUNT(pl.purch_list_no) AS tot_cnt
      FROM tb_scm_purchase_list pl
       inner join tb_scm_supply sp on sp.supply_cd = pl.supply_cd
       inner join tb_order od on od.order_cd = pl.order_cd
       inner join tb_scm_product pd on pd.product_cd = od.product_cd
       inner join tb_scm_m_category mc on mc.m_ct_cd = pd.m_ct_cd
       inner join tb_scm_warehouse wh on wh.warehouse_cd = sp.warehouse_cd
       inner join (
                    SELECT detail_code, group_code, detail_name
                      FROM tb_detail_code
                     WHERE group_code = 'STTcd'
        ) dc ON dc.detail_code = od.STTcd 
      WHERE od.STTcd in (11,12)
        <if test="(sname != null) and (!sname.equals(''))">
          <choose>
            <when
              test="oname eq 'all'.toString()">
              and mc.m_ct_nm LIKE CONCAT('%', #{sname}, '%') or pd.prod_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
            <when test="oname eq 'brand'.toString()">
              and mc.m_ct_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
            <when test="oname eq 'product'.toString()">
               and pd.prod_nm LIKE CONCAT('%', #{sname}, '%')
            </when>
          </choose>
        </if>
        <if test="(date != null) and (!date.equals(''))">
            and ( DATE_FORMAT(pl.purch_date, "%Y-%m-%d") = #{date}
               or DATE_FORMAT(pl.desired_delivery_date, "%Y-%m-%d") = #{date} )
        </if>
  </select>
  
  <!-- 발주서 상태 변경 -->
  <update id="updateSTTcd" parameterType="int">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
    UPDATE tb_order
       SET STTcd = 12
     WHERE order_cd = #{order_cd} AND STTcd = 11
  </update>
  
  <!-- 발주지시서 입고완료 버튼 클릭 시 재고 업데이트 -->
  <update id="updateStock" parameterType="int">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
   UPDATE tb_scm_product
      SET stock = stock + #{purch_qty}
    WHERE product_cd = #{product_cd}
  </update>
  
  <!-- 반품서 버튼 -->
  <select id="selectRefundBtn" resultType="kr.happyjob.study.pcs.model.PcsModel">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
      SELECT 
           DISTINCT
             PL.purch_list_no
         ,   SP.supply_nm
         ,   PD.prod_nm
         ,   PD.m_ct_cd
         ,   PL.purch_qty
         ,   PD.purchase_price
         ,   PL.desired_delivery_date
         ,   WH.warehouse_nm
         ,   WH.warehouse_cd
         ,   PL.purch_mng_id
         ,   PL.supply_cd
         ,   DC.detail_name
         ,   PD.product_cd
         ,   PL.return_qty
         ,   PL.return_price
         ,   PL.return_qty
         ,   PL.return_date
         ,   PL.return_mng_id
         ,   PL.request_return_date
      FROM tb_scm_purchase_list as PL
          LEFT JOIN tb_order as OD
        ON PL.order_cd = OD.order_cd
        LEFT JOIN tb_scm_warehouse as WH
        ON OD.warehouse_cd = WH.warehouse_cd  
        LEFT JOIN tb_scm_supply as SP
        ON PL.supply_cd = SP.supply_cd
        LEFT JOIN tb_scm_product as PD
        ON OD.product_cd = PD.product_cd
        LEFT JOIN (
            SELECT detail_code, group_code, detail_name
          FROM tb_detail_code
          WHERE group_code = 'STTcd'
        ) DC ON OD.STTcd = DC.detail_code
     WHERE PL.purch_list_no = #{purch_list_no}
  </select>
  
  <!-- 반품서 버튼 클릭 시 상태 업데이트 -->
  <update id="updateReturnState" parameterType="int">
    /*kr.kosmo.jobkorea.pcs.dao.PcsDao*/
   UPDATE tb_scm_purchase_list
      SET return_qty = #{return_qty},
          return_price = #{return_price},
          request_return_date = #{request_return_date}
    WHERE purch_list_no = #{purch_list_no}
  </update>
</mapper>