<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.system.dao.NoticeDao">
  
  <!-- 공지사항 목록 조회(기본, 검색) -->
  <select id="selectNoticeList" resultType="kr.happyjob.study.system.model.NoticeModel">
    
    SELECT notice_id,
           title,
           content,
           DATE_FORMAT(date, '%Y-%m-%d') as date,
           view_cnt,
           auth
      FROM tb_scm_notice
     WHERE (auth = #{auth} or auth = 0)
     <if test="keyword != ''">
       <choose>
         <when test="option eq 'all'.toString()">
           AND (title LIKE CONCAT('%', #{keyword}, '%') or content LIKE CONCAT('%', #{keyword}, '%'))
           <if test="formerDate!= ''">
           AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
           </if>
         </when>
         <when test="option eq 'title'.toString()">
           AND title LIKE CONCAT('%', #{keyword}, '%')
           <if test="formerDate!= ''">
             AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
           </if>
         </when>
         <when test="option eq 'content'.toString()">
           AND content LIKE CONCAT('%', #{keyword}, '%')
           <if test="formerDate!= ''">
             AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
           </if>
         </when>
       </choose>
     </if>
     <if test="keyword == ''">
       <if test="formerDate != ''">
         AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
       </if>
     </if>
  ORDER BY notice_id DESC
     LIMIT #{pageIndex}, #{pageSize}  
               
  </select>
  
  <!-- 공지사항 목록(기본) 총 개수 조회 -->
  <select id="countNoticeList" resultType="int" parameterType="int">
  
    SELECT count(notice_id)
      FROM tb_scm_notice
     WHERE (auth = #{auth} or auth = 0)
         
   </select>
  
  <!-- 공지사항 목록(검색) 총 개수 조회 -->
  <select id="countConditionList" resultType="int">
  
    SELECT COUNT(notice_id)
      FROM tb_scm_notice
     WHERE (auth = #{auth} or auth = 0)
     <if test="keyword != ''">
       <choose>
         <when test="option eq 'all'.toString()">
           AND (title LIKE CONCAT('%', #{keyword}, '%') or content LIKE CONCAT('%', #{keyword}, '%'))
           <if test="formerDate!= ''">
           AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
           </if>
         </when>
         <when test="option eq 'title'.toString()">
           AND title LIKE CONCAT('%', #{keyword}, '%')
           <if test="formerDate!= ''">
             AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
           </if>
         </when>
         <when test="option eq 'content'.toString()">
           AND content LIKE CONCAT('%', #{keyword}, '%')
           <if test="formerDate!= ''">
             AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
           </if>
         </when>
       </choose>
     </if>
     <if test="keyword == ''">
       <if test="formerDate != ''">
         AND DATE(date) BETWEEN (#{formerDate}) AND (#{latterDate})
       </if>
     </if>
  </select>
  
  <!-- 공지사항 단건 조회 -->
  <select id="selectNoticeDetail" resultType="kr.happyjob.study.system.model.NoticeModel" parameterType="int">
    SELECT noti.notice_id, 
           noti.title,
           noti.content,
           DATE_FORMAT(date, '%Y-%m-%d %H:%m') as date,
           noti.auth,
           noti.file_no,
           fil.file_local_path,
           fil.file_relative_path,
           fil.file_ofname,
           fil.file_size
      FROM tb_scm_notice noti 
           LEFT JOIN tb_file fil 
           on noti.file_no = fil.file_no
     WHERE noti.notice_id = #{notice_id};
  
  </select>
  
  <!-- 조회수 증가 -->
  <update id="updateViewCount">
  
    UPDATE tb_scm_notice
       SET view_cnt = view_cnt + 1 
     WHERE notice_id = #{notice_id}
     
  </update>
  
  <!-- 공지사항 작성 -->
  <insert id="insertNotice" parameterType="java.util.Map">
    
    INSERT INTO tb_scm_notice
               (
                title, 
                content, 
                date, 
                view_cnt, 
                auth, 
                file_no
                )
         VALUES 
                (
                  #{title}, 
                  #{content}, 
                  NOW(),
                  0, 
                  #{auth},
                  #{file_no}
                 )
  
  </insert>  
  
  <!-- 공지사항 수정 -->
  <update id="updateNotice">
    UPDATE tb_scm_notice
       SET title = #{title},
           content = #{content},
           auth = #{auth}
           <if test="file_no != 0">
            ,file_no = #{file_no}
           </if>
     WHERE notice_id = #{notice_id}
  </update>
  
  <!-- 공지사항 삭제 -->
  <delete id="deleteNotice">
    DELETE FROM tb_scm_notice
          WHERE notice_id = #{notice_id}
  </delete>
  
  <!-- 파일 업로드를 위해  file_no 조회 -->
  <select id="selectFileNo" resultType="int">
    SELECT IFNULL(max(file_no), 0) + 1
      FROM tb_file
  </select>
    
  <!-- 파일 업로드 -->
  <insert id="insertFile">
  
    INSERT INTO  tb_file
                (
                 file_no, 
                 file_local_path, 
                 file_relative_path, 
                 file_ofname, 
                 file_size
                 )
         VALUES (
                 #{file_no}, 
                 #{file_local_path}, 
                 #{file_relative_path}, 
                 #{file_ofname}, 
                 #{file_size}
                 )
  </insert>
  
  <!-- 파일 수정 -->
  <update id="updateFile">
    
    UPDATE tb_file
       SET file_local_path = #{file_local_path},
           file_relative_path = #{file_relative_path},
           file_ofname = #{file_ofname},
           file_size = #{file_size}
     WHERE file_no = #{file_no}
  
  </update>
  
  <!-- 파일 삭제 -->
  <delete id="deleteFile" parameterType="int">
    
    DELETE FROM tb_file
          WHERE file_no = #{file_no}
  
  </delete>
 
</mapper>

